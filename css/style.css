@font-face {
    font-family: 'Minecraft';
    src: url('../fonts/Minecraft.ttf') format('truetype');
  }

/* Defining body font and background. */
  body {
    font-family: 'Minecraft', sans-serif;
    line-height: 1.2;
    /* background-color: rgb(249,249,249); */
    background-image: url('../images/background.png');
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    background-size: cover;
  }

#page_top, #page_middle, #page_bottom, #credits_side{
    align-self: stretch;
    display:flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-left: -36px;
    margin-right: -36px;
    border: 16px solid transparent;
}

#page_top{
    border-image: url('../images/48x48\ Top\ Border.png') 16 round;
    margin-top: -20px;
}

#page_middle {
    border-image: url('../images/48x48\ Middle\ Border.png') 16 round;
}

#page_bottom{
    border-image: url('../images/48x48\ Bottom\ Border.png') 16 round;
    margin-bottom: -20px;
}

#credits_side{
    border-image: url('../images/48x48\ Credits\ Side\ Border.png') 16 round;
}

:root {
    color-scheme: light;
    --my_green: rgb(40, 184, 93);
    --my_blue: rgb(40, 59, 184);
    --my_yellow: rgb(184, 165, 40);
    --my_purple: rgb(184, 40, 131);
    --my_black: rgb(20, 20, 20);
    --my_dark_grey: rgb(83, 83, 83);
    --my_light_grey: rgb(133, 133, 133);
}
  

p, h1, h2, table{
    position: relative;
    color: black;
    background: var(--my_green);
    margin: 0.4em;
    width: auto;
    height: auto;
    border-radius: 5%;
    display: inline;
}

tr, td{
    border: 2px var(--my_black) solid;
}


table{
    border: 6px solid;
    border-color: var(--my_light_grey) var(--my_dark_grey) var(--my_dark_grey) var(--my_light_grey);
    border-collapse: collapse;
}

p{
    font-size: 18px;
    padding: 15px;
}

h1, h2{
    padding: 10px;
}

.general_img{
    height: fit-content;
    width: min(900px, 90%);
    border-radius: 5%;
    border: 5px solid black;
}

/* Defining body size, border and element alignment method. */
body{
    min-height: 100vh;
    border: 16px solid transparent;
    padding: 20px;
    border-image: url('../images/48x48\ Body\ Border.png') 16 round;
    display:flex; /*flex-start, center, flex-end, space-evenly*/
    /* gap: 20px; */
    flex-direction: column;
    justify-content: space-evenly; /*[x-axis] for flex-direction:row; */
    align-items: center; /*[y-axis] for flex-direction:row; */
}

#farms {
    min-height: 200px;
    padding-left: 5%;
    padding-right: 5%;
    /* border: 4px solid blue; */
    display:flex; /*flex-start, center, flex-end, space-evenly*/
    gap: 30px;
    flex-wrap: wrap; /* Repsonsive elements in flexbox which will allign items to flow to the next
                        line if there is not enough space in the current one. */
    flex-direction: row;
    justify-content: space-evenly; /*[x-axis] for flex-direction:row; */
    align-items: center; /*[y-axis] for flex-direction:row; */
    align-content: center; /* controls alignment for all boxes togethr even in separate lines. */
}

.box{
    display:flex;
    justify-content: space-evenly;
    align-items: center;
    gap: 22px;
    /* height: min(400px, 100%); */
    min-height: 200px;
    height: auto;
    width: min(600px, 90%);
    background-color: var(--my_green);
    font-size: 18px;
    border-radius: 30px;
    /* text-align: center; */
    position:relative;
}

/* Children of the box class with flex layout. */

.farm-title{
    /* display:flex; */
    text-align: center;
    flex: 0 0 min(200px, 30%);
    font-size: 1.5em;
    margin: 0.4em;
    width: auto;
    height: auto;
    font-weight: bold;
}

.farm-body{
    flex: 0 0 min(300px, 50%);
}

/* Adding border animation to box. */

@property --angle{
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

.box::after, p::after, .box::before, p::before, h1::after, h1::before, h2::after, h2::before, table::after, table::before{
    /* --angle: 0deg; Custom variable for changing angle.*/
    content:'';
    position: absolute;
    height: 100%;
    width: 100%;
    z-index: -1;
    border-radius: 30px;
}

p::after, p::before, h1::after, h1::before, h2::after, h2::before{
    border-radius: inherit;
    top: -2px;
    left: -2px;
    padding: 2px;
    animation: 10s edge_run linear infinite;
}

table::after, table::before{
    border-radius: inherit;
    top: -8px;
    left: -8px;
    padding: 8px;
    animation: 10s edge_run linear infinite;
}

.box::after, .box::before{
    padding: 2px;
    animation: 10s edge_run linear infinite;
}

p::after, p::before, table::after, table::before, .box::after, .box::before{
    background-image: conic-gradient(from var(--angle), var(--my_blue), var(--my_black), var(--my_blue));
}

h1::after, h1::before, h2::after, h2::before{
    background-image: conic-gradient(from var(--angle), var(--my_yellow), var(--my_black), var(--my_yellow));
}

.box::before, p::before, h1::before, h2::before, table::before{
    filter: blur(1.5rem);
    opacity: 0.5;
}

@keyframes edge_run{
    from{
        --angle: 0deg;
    }
    to{
        --angle: 360deg;
    }
}

/* Adding a hovering shadow effect to the box. */

.box:hover, p:hover, table:hover{
    box-shadow: 7px 7px 7px var(--my_blue) inset,
    -7px -7px 7px var(--my_blue) inset;
}

h1:hover, h2:hover{
    box-shadow: 7px 7px 7px var(--my_yellow) inset,
    -7px -7px 7px var(--my_yellow) inset;
}




/* Properties of a rainbow border. Added on click to rainbow clsss in JS to acivate below CSS.*/
.box.rainbow::before, .box.rainbow::after, h1.rainbow::before, h1.rainbow::after, h2.rainbow::before, h2.rainbow::after, p.rainbow::before, p.rainbow::after, table.rainbow::before, table.rainbow::after {
    animation: 5s edge_run linear infinite;
    background-image: conic-gradient(from var(--angle),transparent 0%, var(--my_blue), var(--my_purple), var(--my_yellow));
    padding: 5px;
}

h1.rainbow::before, h1.rainbow::after, h2.rainbow::before, h2.rainbow::after, p.rainbow::before, p.rainbow::after{
    top: -5px;
    left: -5px;
}

table.rainbow::before, table.rainbow::after {
    padding: 10px;
    top: -10px;
    left: -10px;
}

.box.rainbow:hover, p.rainbow:hover, table.rainbow:hover, h1.rainbow:hover, h2.rainbow:hover{
    box-shadow: none;
}




/* Changing based on window width. */

/* p.width_manual_limit{
    width: 90%;
} */

p.text_size_change, table.text_size_change, .box.text_size_change{
    font-size: 14px;
}
.box.text_size_change{
    min-height: 100px;
}
.farm-title.text_size_change{
    font-size: 19px;
    margin: 0.2em;
}
h1.text_size_change{
    font-size: 22px;
}
h2.text_size_change{
    font-size: 19px;
}
